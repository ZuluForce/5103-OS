<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>5103 Project 1: cKernel Class Reference</title>

<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />

<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">5103 Project 1
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">cKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="cKernel" -->
<p>Core managing class for this simulated OS.  
</p>

<p><code>#include &lt;<a class="el" href="../../d0/daa/kernel_8h_source.xhtml">kernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for cKernel:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d6f/classcKernel__coll__graph.svg" width="100%" height="352"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="../../d3/d57/classcKernel-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#ab14dbe0cc2a6e4a346a38e24566fbdd1">cKernel</a> (<a class="el" href="../../d0/d21/classcScheduler.xhtml">cScheduler</a> &amp;)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Default <a class="el" href="../../db/da5/classcKernel.xhtml" title="Core managing class for this simulated OS.">cKernel</a> constructor.  <a href="#ab14dbe0cc2a6e4a346a38e24566fbdd1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">boot</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the 'OS' Kernel.  <a href="#a0ce9a2721bb1ea4d7f999198634f702d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a5440eace2647ffd5279de55600947b84">initProcess</a> (const char *filename, pidType parent, int priority=<a class="el" href="../../d0/daa/kernel_8h.xhtml#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize a Process.  <a href="#a5440eace2647ffd5279de55600947b84"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a1e7cb5c6d9e6140e197f9b18dc8bd1b1">cleanupProcess</a> (pidType pid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Cleans up a terminated process.  <a href="#a1e7cb5c6d9e6140e197f9b18dc8bd1b1"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a1b8e06f240c1bb7d0c4d0d30bcc55e18">swapProcesses</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *proc, bool switchMode=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Swap a process on the cpu.  <a href="#a1b8e06f240c1bb7d0c4d0d30bcc55e18"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#abcc0464e62a5fb82ddf4a3f8ba5ec461">cleanupProcess</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Cleanup process memory and state.  <a href="#abcc0464e62a5fb82ddf4a3f8ba5ec461"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a60ccaffeee3cfcfdfb4aa7b9e33b19f4">sigHandler</a> (int signum, siginfo_t *info)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Handler for all signals.  <a href="#a60ccaffeee3cfcfdfb4aa7b9e33b19f4"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a571bb344ba50970d9c4a1cb5b500bbcd"></a><!-- doxytag: member="cKernel::sig_catch" ref="a571bb344ba50970d9c4a1cb5b500bbcd" args="(int signum, siginfo_t *info, void *context)" -->
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a571bb344ba50970d9c4a1cb5b500bbcd">sig_catch</a> (int signum, siginfo_t *info, void *context)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function just for capturing signals. <br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7b4ac330752179e72a5e440d30c64e91"></a><!-- doxytag: member="cKernel::traceStream" ref="a7b4ac330752179e72a5e440d30c64e91" args="" -->
FILE *&#160;</td><td class="memItemRight" valign="bottom"><b>traceStream</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b311fdca8f041c935a61ca5b829adf5"></a><!-- doxytag: member="cKernel::procLogger" ref="a3b311fdca8f041c935a61ca5b829adf5" args="" -->
<a class="el" href="../../db/d63/classcProcessLogger.xhtml">cProcessLogger</a>&#160;</td><td class="memItemRight" valign="bottom"><b>procLogger</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1fb233fa1c51650ccf2c872d856329ff"></a><!-- doxytag: member="cKernel::cpu" ref="a1fb233fa1c51650ccf2c872d856329ff" args="" -->
<a class="el" href="../../d2/dc6/classcCPU.xhtml">cCPU</a>&#160;</td><td class="memItemRight" valign="bottom"><b>cpu</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1de4acdb706016573445b3c497e3b508"></a><!-- doxytag: member="cKernel::clockTick" ref="a1de4acdb706016573445b3c497e3b508" args="" -->
int&#160;</td><td class="memItemRight" valign="bottom"><b>clockTick</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a61c0f8a08a605a92c564056bb34f6957"></a><!-- doxytag: member="cKernel::intLock" ref="a61c0f8a08a605a92c564056bb34f6957" args="" -->
pthread_mutex_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a61c0f8a08a605a92c564056bb34f6957">intLock</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Lock for condition variable. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a81cad8017ccbb1768ee0aa9aa2fcf056"></a><!-- doxytag: member="cKernel::intCond" ref="a81cad8017ccbb1768ee0aa9aa2fcf056" args="" -->
pthread_cond_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a81cad8017ccbb1768ee0aa9aa2fcf056">intCond</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">For synchronization with clocktick. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a39d83e4f0a712b0339120ac418608744"></a><!-- doxytag: member="cKernel::bDevice" ref="a39d83e4f0a712b0339120ac418608744" args="" -->
<a class="el" href="../../dd/d36/classcBlockDevice.xhtml">cBlockDevice</a>&#160;</td><td class="memItemRight" valign="bottom"><b>bDevice</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad65b547cee086705689e2fd991518bfe"></a><!-- doxytag: member="cKernel::cDevice" ref="ad65b547cee086705689e2fd991518bfe" args="" -->
<a class="el" href="../../d9/de9/classcCharDevice.xhtml">cCharDevice</a>&#160;</td><td class="memItemRight" valign="bottom"><b>cDevice</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1e82363115819c11c74ac261d82d11b5"></a><!-- doxytag: member="cKernel::clockInterrupt" ref="a1e82363115819c11c74ac261d82d11b5" args="" -->
<a class="el" href="../../dc/d14/classClockDevice.xhtml">ClockDevice</a>&#160;</td><td class="memItemRight" valign="bottom"><b>clockInterrupt</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0c3334878b944a69896982222dff8b36"></a><!-- doxytag: member="cKernel::deviceThread" ref="a0c3334878b944a69896982222dff8b36" args="" -->
pthread_t&#160;</td><td class="memItemRight" valign="bottom"><b>deviceThread</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab928a0890424b001375a518afa6a91d7"></a><!-- doxytag: member="cKernel::DevSigSem" ref="ab928a0890424b001375a518afa6a91d7" args="" -->
sem_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#ab928a0890424b001375a518afa6a91d7">DevSigSem</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A device interrupt has been received. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ba7a1fd75f4b109d3e8cb1a3ed28868"></a><!-- doxytag: member="cKernel::BSigSem" ref="a0ba7a1fd75f4b109d3e8cb1a3ed28868" args="" -->
sem_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a0ba7a1fd75f4b109d3e8cb1a3ed28868">BSigSem</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A block device interrupt has been received. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a603e89ab3f91bbbea51685810fe51afa"></a><!-- doxytag: member="cKernel::CSigSem" ref="a603e89ab3f91bbbea51685810fe51afa" args="" -->
sem_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a603e89ab3f91bbbea51685810fe51afa">CSigSem</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A char device interrupt has been received. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e33ce858b1839bbeb6503515bf11475"></a><!-- doxytag: member="cKernel::runningProc" ref="a6e33ce858b1839bbeb6503515bf11475" args="" -->
<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a6e33ce858b1839bbeb6503515bf11475">runningProc</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Process currently on the cpu. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a03d2c6943661797e86c030864890183e"></a><!-- doxytag: member="cKernel::idGenerator" ref="a03d2c6943661797e86c030864890183e" args="" -->
<a class="el" href="../../de/dd4/classcIDManager.xhtml">cIDManager</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#a03d2c6943661797e86c030864890183e">idGenerator</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">For generating new process PID's. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2187347881ef22432f28f82ad73a9bc5"></a><!-- doxytag: member="cKernel::scheduler" ref="a2187347881ef22432f28f82ad73a9bc5" args="" -->
<a class="el" href="../../d0/d21/classcScheduler.xhtml">cScheduler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>scheduler</b></td></tr>
<tr><td colspan="2"><h2><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae757ff0479ba7ce5154aff58f493cfa9"></a><!-- doxytag: member="cKernel::kernel_instance" ref="ae757ff0479ba7ce5154aff58f493cfa9" args="" -->
static <a class="el" href="../../db/da5/classcKernel.xhtml">cKernel</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>kernel_instance</b></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da5/classcKernel.xhtml#af9d3f90a4d65f73fab17cccabb1350bd">deviceHandle</a> (void *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Thread function for handline device interrupts.  <a href="#af9d3f90a4d65f73fab17cccabb1350bd"></a><br/></td></tr>
</table>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab14dbe0cc2a6e4a346a38e24566fbdd1"></a><!-- doxytag: member="cKernel::cKernel" ref="ab14dbe0cc2a6e4a346a38e24566fbdd1" args="(cScheduler &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/da5/classcKernel.xhtml#ab14dbe0cc2a6e4a346a38e24566fbdd1">cKernel::cKernel</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/d21/classcScheduler.xhtml">cScheduler</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The default constructor initializes all internal datastructures and loads the initial program (default: 'main.trace') but does not run it. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a0ce9a2721bb1ea4d7f999198634f702d"></a><!-- doxytag: member="cKernel::boot" ref="a0ce9a2721bb1ea4d7f999198634f702d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">cKernel::boot</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Starts the main kernel loop. The initial program is loaded and execution follows from there.</p>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="../../dc/d4b/structkernelError.xhtml" title="Struct containing kernel crash information.">kernelError</a></td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abcc0464e62a5fb82ddf4a3f8ba5ec461"></a><!-- doxytag: member="cKernel::cleanupProcess" ref="abcc0464e62a5fb82ddf4a3f8ba5ec461" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#abcc0464e62a5fb82ddf4a3f8ba5ec461">cKernel::cleanupProcess</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"><em>proc</em></td><td>)</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is called when a process is being removed from the system and its memory and any remaining state information needs to be cleaned up. </p>

<p>Referenced by <a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">boot()</a>.</p>

</div>
</div>
<a class="anchor" id="a1e7cb5c6d9e6140e197f9b18dc8bd1b1"></a><!-- doxytag: member="cKernel::cleanupProcess" ref="a1e7cb5c6d9e6140e197f9b18dc8bd1b1" args="(pidType pid)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#abcc0464e62a5fb82ddf4a3f8ba5ec461">cKernel::cleanupProcess</a> </td>
          <td>(</td>
          <td class="paramtype">pidType&#160;</td>
          <td class="paramname"><em>pid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Cleans up any memory and kernel entries associated with the terminated process. Also removes the process from the scheduler. </p>

</div>
</div>
<a class="anchor" id="a5440eace2647ffd5279de55600947b84"></a><!-- doxytag: member="cKernel::initProcess" ref="a5440eace2647ffd5279de55600947b84" args="(const char *filename, pidType parent, int priority=DEFAULT_PRIORITY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#a5440eace2647ffd5279de55600947b84">cKernel::initProcess</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pidType&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>priority</em> = <code><a class="el" href="../../d0/daa/kernel_8h.xhtml#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initializes a process by loading program file contents, setting default process values and adding it in a ready state to the scheduler. </p>

<p>Referenced by <a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">boot()</a>, and <a class="el" href="../../db/da5/classcKernel.xhtml#ab14dbe0cc2a6e4a346a38e24566fbdd1">cKernel()</a>.</p>

</div>
</div>
<a class="anchor" id="a60ccaffeee3cfcfdfb4aa7b9e33b19f4"></a><!-- doxytag: member="cKernel::sigHandler" ref="a60ccaffeee3cfcfdfb4aa7b9e33b19f4" args="(int signum, siginfo_t *info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#a60ccaffeee3cfcfdfb4aa7b9e33b19f4">cKernel::sigHandler</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>signum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">siginfo_t *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>For clock interrupt signals, the handler signals on a condition variable which the main thread will be waiting on.</p>
<p>For block and character devices, the appropriate semaphores are incremented which will unblock the waiting thread to act on them.</p>
<p>This function is called by <a class="el" href="../../db/da5/classcKernel.xhtml#a571bb344ba50970d9c4a1cb5b500bbcd" title="Static function just for capturing signals.">cKernel::sig_catch</a> </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/da5/classcKernel.xhtml#af9d3f90a4d65f73fab17cccabb1350bd" title="Thread function for handline device interrupts.">deviceHandle(void*)</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#a81cad8017ccbb1768ee0aa9aa2fcf056" title="For synchronization with clocktick.">cKernel::intCond</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#ab928a0890424b001375a518afa6a91d7" title="A device interrupt has been received.">DevSigSem</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#a603e89ab3f91bbbea51685810fe51afa" title="A char device interrupt has been received.">CSigSem</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#a0ba7a1fd75f4b109d3e8cb1a3ed28868" title="A block device interrupt has been received.">BSigSem</a> </dd></dl>

<p>Referenced by <a class="el" href="../../db/da5/classcKernel.xhtml#a571bb344ba50970d9c4a1cb5b500bbcd">sig_catch()</a>.</p>

</div>
</div>
<a class="anchor" id="a1b8e06f240c1bb7d0c4d0d30bcc55e18"></a><!-- doxytag: member="cKernel::swapProcesses" ref="a1b8e06f240c1bb7d0c4d0d30bcc55e18" args="(ProcessInfo *proc, bool switchMode=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/da5/classcKernel.xhtml#a1b8e06f240c1bb7d0c4d0d30bcc55e18">cKernel::swapProcesses</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"><em>proc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>switchMode</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Takes the process in its parameter and swaps it with the one currently running in the cpu. </p>

<p>Referenced by <a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">boot()</a>.</p>

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="af9d3f90a4d65f73fab17cccabb1350bd"></a><!-- doxytag: member="cKernel::deviceHandle" ref="af9d3f90a4d65f73fab17cccabb1350bd" args="(void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* <a class="el" href="../../db/da5/classcKernel.xhtml#af9d3f90a4d65f73fab17cccabb1350bd">deviceHandle</a> </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Since limited work can be done within the signal handlers and the main thread may block, a separate thread must be present to handle device interrupts.</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/da5/classcKernel.xhtml#ab928a0890424b001375a518afa6a91d7" title="A device interrupt has been received.">DevSigSem</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#a603e89ab3f91bbbea51685810fe51afa" title="A char device interrupt has been received.">CSigSem</a> </dd>
<dd>
<a class="el" href="../../db/da5/classcKernel.xhtml#a0ba7a1fd75f4b109d3e8cb1a3ed28868" title="A block device interrupt has been received.">BSigSem</a></dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">void*</td><td>This is a pointer to the kernel instance. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="../../db/da5/classcKernel.xhtml#a0ce9a2721bb1ea4d7f999198634f702d">boot()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/<a class="el" href="../../d0/daa/kernel_8h_source.xhtml">kernel.h</a></li>
<li>src/kernel.cpp</li>
</ul>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Feb 19 2012 11:15:09 for 5103 Project 1 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
