<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>5103 Project 1: cRoundRobin Class Reference</title>

<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />

<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">5103 Project 1
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">cRoundRobin Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="cRoundRobin" --><!-- doxytag: inherits="cScheduler" -->
<p>Round Robin Scheduler.  
</p>

<p><code>#include &lt;<a class="el" href="../../d9/dd2/round__robin_8h_source.xhtml">round_robin.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for cRoundRobin:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d7/de9/classcRoundRobin__inherit__graph.svg" width="112" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for cRoundRobin:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../de/d42/classcRoundRobin__coll__graph.svg" width="100%" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="../../de/df3/classcRoundRobin-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#aadb221df9b12f61c3151996ea5c09741">initProcScheduleInfo</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize scheduler specific information within the <a class="el" href="../../dd/dc8/structProcessInfo.xhtml" title="Structure for containing process state and data.">ProcessInfo</a> struct.  <a href="#aadb221df9b12f61c3151996ea5c09741"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a3571d05a8daebccb758d63b8327f8a22">addProcess</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfer control of process state and scheduling.  <a href="#a3571d05a8daebccb758d63b8327f8a22"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a13609de0f36c81a780072f9c0730f963">setBlocked</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set a process into a <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa035732e2026cb263f1bd9eee6ca6ae01" title="Process is blocked and cannot run.">blocked</a> state.  <a href="#a13609de0f36c81a780072f9c0730f963"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a278d541c78f034020f6921b22a7d37af">unblockProcess</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Unblock a process and make it ready.  <a href="#a278d541c78f034020f6921b22a7d37af"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a1bc7bfc4c36bdbe3f3938810817d885e">removeProcess</a> (<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a process from the control of the scheduler.  <a href="#a1bc7bfc4c36bdbe3f3938810817d885e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a1979ff71bb2320bdb00eae5feb2b2688">getNextToRun</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Query the scheduler for next process to run.  <a href="#a1979ff71bb2320bdb00eae5feb2b2688"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pidType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#afa0cdfcfc0b8222d39ad5e9c23db1f25">numProcesses</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">How many processes are in the scheduler.  <a href="#afa0cdfcfc0b8222d39ad5e9c23db1f25"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a6e0d0ec272a4f7ffe03166b1ff08276b">addLogger</a> (FILE *_logStream)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add an instance of the trace logger to the scheduler.  <a href="#a6e0d0ec272a4f7ffe03166b1ff08276b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a728fa415647d6c71b32ee8d4a04580e1">addProcLogger</a> (<a class="el" href="../../db/d63/classcProcessLogger.xhtml">cProcessLogger</a> *_procLogger)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add instance of process logger to the scheduler.  <a href="#a728fa415647d6c71b32ee8d4a04580e1"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af8667fa086a7562c2523d5b5cd783d75"></a><!-- doxytag: member="cRoundRobin::readyQueue" ref="af8667fa086a7562c2523d5b5cd783d75" args="" -->
queue&lt; <a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>readyQueue</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2816611cab817668edbeceff1a17ccca"></a><!-- doxytag: member="cRoundRobin::blockedVector" ref="a2816611cab817668edbeceff1a17ccca" args="" -->
vector&lt; <a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>blockedVector</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2068152f0b3d1592dc031ecf7b0d7d5f"></a><!-- doxytag: member="cRoundRobin::totalBlocked" ref="a2068152f0b3d1592dc031ecf7b0d7d5f" args="" -->
int&#160;</td><td class="memItemRight" valign="bottom"><b>totalBlocked</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8779f8cb28be168316b485c77d09b210"></a><!-- doxytag: member="cRoundRobin::clockTicksUsed" ref="a8779f8cb28be168316b485c77d09b210" args="" -->
int&#160;</td><td class="memItemRight" valign="bottom"><b>clockTicksUsed</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a58ea813b29ddc7ca0da1428a1fcb7693"></a><!-- doxytag: member="cRoundRobin::runningProc" ref="a58ea813b29ddc7ca0da1428a1fcb7693" args="" -->
<a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>runningProc</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b5a8047d5522b85a486f1caeeaca9f6"></a><!-- doxytag: member="cRoundRobin::blockedLock" ref="a3b5a8047d5522b85a486f1caeeaca9f6" args="" -->
pthread_mutex_t&#160;</td><td class="memItemRight" valign="bottom"><b>blockedLock</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac9f22c160b4e3cb118723a1e780575ad"></a><!-- doxytag: member="cRoundRobin::allBlocked" ref="ac9f22c160b4e3cb118723a1e780575ad" args="" -->
pthread_cond_t&#160;</td><td class="memItemRight" valign="bottom"><b>allBlocked</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a15ca5ec15a4ae935706b55ac71d6bee2"></a><!-- doxytag: member="cRoundRobin::blockedID" ref="a15ca5ec15a4ae935706b55ac71d6bee2" args="" -->
<a class="el" href="../../de/dd4/classcIDManager.xhtml">cIDManager</a>&#160;</td><td class="memItemRight" valign="bottom"><b>blockedID</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2a2f87f637cb0cbfd9d2bfe69bc91de2"></a><!-- doxytag: member="cRoundRobin::logStream" ref="a2a2f87f637cb0cbfd9d2bfe69bc91de2" args="" -->
FILE *&#160;</td><td class="memItemRight" valign="bottom"><b>logStream</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa740c249a96cdc04f04a93ae039a6551"></a><!-- doxytag: member="cRoundRobin::procLogger" ref="aa740c249a96cdc04f04a93ae039a6551" args="" -->
<a class="el" href="../../db/d63/classcProcessLogger.xhtml">cProcessLogger</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>procLogger</b></td></tr>
</table>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a6e0d0ec272a4f7ffe03166b1ff08276b"></a><!-- doxytag: member="cRoundRobin::addLogger" ref="a6e0d0ec272a4f7ffe03166b1ff08276b" args="(FILE *_logStream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a6e0d0ec272a4f7ffe03166b1ff08276b">cRoundRobin::addLogger</a> </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The kernel passes a file stream pointer for the scheduler to print trace info such as blocking/unblocking events.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">FILE*</td><td>File stream for trace log </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../d1/d8c/logger_8h.xhtml#acf2f61176acdfe03ac9f73ec56fb3bd6" title="Initialize a trace log at filename.">initLog(const char* filename)</a> </dd>
<dd>
<a class="el" href="../../d1/d8c/logger_8h.xhtml#af756a6a1097f12014f446b298d8a266f" title="Get the file stream to write to.">getStream()</a> </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a7b29af7eab1a9cbe383d98a44693be69">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a3571d05a8daebccb758d63b8327f8a22"></a><!-- doxytag: member="cRoundRobin::addProcess" ref="a3571d05a8daebccb758d63b8327f8a22" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a3571d05a8daebccb758d63b8327f8a22">cRoundRobin::addProcess</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>After this is called, the kernel core no longer keeps track of the given process. Once the process is created and deemed <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa3d4001ca586c857718be397374082d76" title="Process is ready to be run.">ready</a> by the kernel it is handed off here. The scheduler is then in charge of state transitions when the kernel gives it appropriate notifications.</p>
<p>Implementation Requirements: </p>
<ul>
<li>Store the process in some location. It should be recognized as ready given its location but the datastructures and organization are implementation specific.</li>
</ul>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ProcessInfo*</td><td>Process to add under scheduler's control </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#aeae779c5c160a441e725dfc72656e6dc">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a728fa415647d6c71b32ee8d4a04580e1"></a><!-- doxytag: member="cRoundRobin::addProcLogger" ref="a728fa415647d6c71b32ee8d4a04580e1" args="(cProcessLogger *_procLogger)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a728fa415647d6c71b32ee8d4a04580e1">cRoundRobin::addProcLogger</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../db/d63/classcProcessLogger.xhtml">cProcessLogger</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The kernel passes this pointer so the scheduler can update process info upon process addition, state change and termination. This updates the information presented to the top process.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cProcessLogger*</td><td>Process logger class </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/d63/classcProcessLogger.xhtml" title="Class specifically for logging process state information.">cProcessLogger</a> </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a3e7865112718057fcdc277db0a85c21c">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a1979ff71bb2320bdb00eae5feb2b2688"></a><!-- doxytag: member="cRoundRobin::getNextToRun" ref="a1979ff71bb2320bdb00eae5feb2b2688" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> * <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a1979ff71bb2320bdb00eae5feb2b2688">cRoundRobin::getNextToRun</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>After this function is called, it should be assumed by any scheduler implementation that the kernel will run the given process (unless otherwise notified). The currently running process should implicitly be considered for running next (again).</p>
<p>If there are processes left but all are blocked. This function should block until it receives a signal that a process is unblocked.</p>
<p>Implementation Requirements: </p>
<ul>
<li>Block if there are &gt; 0 processes but none can run. </li>
<li>A process listed as <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821faf9ccc71a0c4e71cc139d2c885154b243" title="Process is currently running.">running</a> within the scheduler should be treated as ready when this method is called. </li>
<li>A process returned as the 'next to run' should be marked as being in a <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821faf9ccc71a0c4e71cc139d2c885154b243" title="Process is currently running.">running</a> state before returning. </li>
<li>If there are no more remaining processes this should return NULL.</li>
</ul>
<dl class="return"><dt><b>Returns:</b></dt><dd><a class="el" href="../../dd/dc8/structProcessInfo.xhtml" title="Structure for containing process state and data.">ProcessInfo</a>* Ready process to run next. May be the same as the currenlty running one.</dd></dl>
<dl class="warning"><dt><b>Warning:</b></dt><dd>Must be thread safe with block and unblock methods. </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a350ad7c55ddcdd17005778b0da241956">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="aadb221df9b12f61c3151996ea5c09741"></a><!-- doxytag: member="cRoundRobin::initProcScheduleInfo" ref="aadb221df9b12f61c3151996ea5c09741" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#aadb221df9b12f61c3151996ea5c09741">cRoundRobin::initProcScheduleInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This method is called after the kernel has initialized all process data but before it is marked <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa3d4001ca586c857718be397374082d76" title="Process is ready to be run.">ready</a>. This gives the scheduler an oportunity to initialize any scheduler specific data and assign it to the <a class="el" href="../../dd/dc8/structProcessInfo.xhtml#aea1c50ae92f6421ae5c94ac674c1877a" title="Scheduler specific data.">ProcessInfo::scheduleData</a> member.</p>
<p>Implementation Requirements: </p>
<ul>
<li>No required actions. </li>
</ul>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a8782803287dce0352623142643eee01a">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="afa0cdfcfc0b8222d39ad5e9c23db1f25"></a><!-- doxytag: member="cRoundRobin::numProcesses" ref="afa0cdfcfc0b8222d39ad5e9c23db1f25" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pidType <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#afa0cdfcfc0b8222d39ad5e9c23db1f25">cRoundRobin::numProcesses</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This returns how many processes, both running and blocked, are being handled by the scheduler.</p>
<p>Implementation Requirements: </p>
<ul>
<li>Return how many processes, running and blocked, are in the scheduler.</li>
</ul>
<dl class="return"><dt><b>Returns:</b></dt><dd>pidType </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a025532a943093ae7e8d6dc0cdaf60f12">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a1bc7bfc4c36bdbe3f3938810817d885e"></a><!-- doxytag: member="cRoundRobin::removeProcess" ref="a1bc7bfc4c36bdbe3f3938810817d885e" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a1bc7bfc4c36bdbe3f3938810817d885e">cRoundRobin::removeProcess</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>When a process terminates, either through normal means or an exception, the kernel will call this function to release a process from the scheduler's control. The scheduler should clean up any internal state for the process. Deallocation of process resources is left to the kernel.</p>
<p>Implementation Requirements: </p>
<ul>
<li>Scheduler should deallocate any resources it assigned to the process within the <a class="el" href="../../dd/dc8/structProcessInfo.xhtml#aea1c50ae92f6421ae5c94ac674c1877a" title="Scheduler specific data.">ProcessInfo::scheduleData</a> member. </li>
<li>The Scheduler should remove any pointers to the give process to avoid dereferncing a dead pointer. </li>
<li>Implementations must not deallocate any memory except that mentioned above. This is handled by the kernel. </li>
<li>Implementations should mark the process as <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa21b6f86c6d8b11d4a9c163130f55c5dd" title="Process has been terminated.">terminated</a>.</li>
</ul>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ProcessInfo*</td><td>Process to remove from scheduler </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a5632ffa597e9567d475c808070c4e3bb">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a13609de0f36c81a780072f9c0730f963"></a><!-- doxytag: member="cRoundRobin::setBlocked" ref="a13609de0f36c81a780072f9c0730f963" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a13609de0f36c81a780072f9c0730f963">cRoundRobin::setBlocked</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The kernel will call the scheduler with this function when the process has done an operation which causes it to block (I).</p>
<p>Implementation Requirements: </p>
<ul>
<li>Process must be marked <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa035732e2026cb263f1bd9eee6ca6ae01" title="Process is blocked and cannot run.">blocked</a> and scheduler state should be changed accordingly. </li>
<li>After this call a process should not be considered for a scheduling decision</li>
</ul>
<dl class="warning"><dt><b>Warning:</b></dt><dd>Must be thread safe. Signal handler/s may block during schedule decision. </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#ae6119e940a3bf58a00e7dbcea04b5b6a">cScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a278d541c78f034020f6921b22a7d37af"></a><!-- doxytag: member="cRoundRobin::unblockProcess" ref="a278d541c78f034020f6921b22a7d37af" args="(ProcessInfo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/dcc/classcRoundRobin.xhtml#a278d541c78f034020f6921b22a7d37af">cRoundRobin::unblockProcess</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/dc8/structProcessInfo.xhtml">ProcessInfo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>When a process has completed a blocking call the kernel will notify the scheduler that it should be unblocked. This operation should be very fast since it will likely be called from a signal handler.</p>
<p>Implementation Requirements: </p>
<ul>
<li>The process must be unblocked and marked <a class="el" href="../../da/d42/process_8h.xhtml#a2c72cb00af5be695c1f898162350821fa3d4001ca586c857718be397374082d76" title="Process is ready to be run.">ready</a>. It must be available for scheduling with the next call to ::getNextToRun</li>
</ul>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ProcessInfo*</td><td>Process to unblock</td></tr>
  </table>
  </dd>
</dl>
<dl class="warning"><dt><b>Warning:</b></dt><dd>Must be thread safe. Signal handler/s may unblock during schedule decision. </dd></dl>

<p>Implements <a class="el" href="../../d0/d21/classcScheduler.xhtml#a81fe2e5e5e2334e36db1cbf491e3fa57">cScheduler</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/scheduler/<a class="el" href="../../d9/dd2/round__robin_8h_source.xhtml">round_robin.h</a></li>
<li>src/scheduler/round_robin.cpp</li>
</ul>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sun Feb 19 2012 11:15:09 for 5103 Project 1 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
