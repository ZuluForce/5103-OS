#ifndef BLOCK_DEVICE_H_INCLUDED
#define BLOCK_DEVICE_H_INCLUDED

/** @file */

#include <cstdio>
#include "devices/queued_device.h"

#ifndef BLOCKSIG
#define BLOCKSIG SIGRTMIN + 1
#endif

using namespace std;

/** Queued block device */
class cBlockDevice: public cAbsQueuedDevice {
	private:
		/// @cond
		timer_t timerid;
		struct sigevent sev;
		struct itimerspec iTime, iDisarm;
		/// @endcond

		queue<ProcessInfo*> waitQueue;
		pthread_mutex_t deviceLock;

	public:
		cBlockDevice(int usec);
		~cBlockDevice();

		void setDefaultTime(int usec);
		void scheduleDevice(ProcessInfo*);

		ProcessInfo* timerFinished();

		int queueLength();
};

/** \def BLOCKSIG
 *	Signal generated by BlockDevice
 */

#endif // BLOCK_DEVICE_H_INCLUDED
